
Button.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000126  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  0000017a  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  0000019a  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000007a  00000000  00000000  000001b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000043  00000000  00000000  0000022f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000a9  00000000  00000000  00000272  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  0000031c  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000009a  00000000  00000000  0000033c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000018  00000000  00000000  000003d6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 66 00 	jmp	0xcc	; 0xcc <__ctors_end>
   4:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
   8:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
   c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  10:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  14:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  18:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  1c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  20:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  24:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  28:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  2c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  30:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  34:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  38:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  3c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  40:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  44:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  48:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  4c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  50:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  54:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  58:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  5c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  60:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  64:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  68:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  6c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  70:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  74:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  78:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  7c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  80:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  84:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  88:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  8c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  90:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  94:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  98:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  9c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  a0:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  a4:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  a8:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  ac:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  b0:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  b4:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  b8:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  bc:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  c0:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  c4:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  c8:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>

000000cc <__ctors_end>:
  cc:	11 24       	eor	r1, r1
  ce:	1f be       	out	0x3f, r1	; 63
  d0:	cf ef       	ldi	r28, 0xFF	; 255
  d2:	d1 e2       	ldi	r29, 0x21	; 33
  d4:	de bf       	out	0x3e, r29	; 62
  d6:	cd bf       	out	0x3d, r28	; 61
  d8:	00 e0       	ldi	r16, 0x00	; 0
  da:	0c bf       	out	0x3c, r16	; 60

000000dc <__do_copy_data>:
  dc:	12 e0       	ldi	r17, 0x02	; 2
  de:	a0 e0       	ldi	r26, 0x00	; 0
  e0:	b2 e0       	ldi	r27, 0x02	; 2
  e2:	e6 e2       	ldi	r30, 0x26	; 38
  e4:	f1 e0       	ldi	r31, 0x01	; 1
  e6:	00 e0       	ldi	r16, 0x00	; 0
  e8:	0b bf       	out	0x3b, r16	; 59
  ea:	02 c0       	rjmp	.+4      	; 0xf0 <__do_copy_data+0x14>
  ec:	07 90       	elpm	r0, Z+
  ee:	0d 92       	st	X+, r0
  f0:	a0 30       	cpi	r26, 0x00	; 0
  f2:	b1 07       	cpc	r27, r17
  f4:	d9 f7       	brne	.-10     	; 0xec <__do_copy_data+0x10>
  f6:	0e 94 81 00 	call	0x102	; 0x102 <main>
  fa:	0c 94 91 00 	jmp	0x122	; 0x122 <_exit>

000000fe <__bad_interrupt>:
  fe:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000102 <main>:

#define SW_START 0x01

int main(void)
{
	DDRC  = 0x7F;
 102:	8f e7       	ldi	r24, 0x7F	; 127
 104:	87 b9       	out	0x07, r24	; 7
	PORTC = 0x7E;
 106:	8e e7       	ldi	r24, 0x7E	; 126
 108:	88 b9       	out	0x08, r24	; 8
	
	DDRD  = 0x70;
 10a:	80 e7       	ldi	r24, 0x70	; 112
 10c:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0x11;
 10e:	81 e1       	ldi	r24, 0x11	; 17
 110:	8b b9       	out	0x0b, r24	; 11

	while (1)
	{
		if(~PIND & SW_START)
			PORTC = ~(LED_BAT|LED_TxD|LED_RxD|LED_AUX|LED_MANAGE|LED_PROGRAM|LED_PLAY);
 112:	90 e8       	ldi	r25, 0x80	; 128
		else PORTC = LED_BAT|LED_TxD|LED_RxD|LED_AUX|LED_MANAGE|LED_PROGRAM|LED_PLAY;
 114:	8f e7       	ldi	r24, 0x7F	; 127
	DDRD  = 0x70;
	PORTD = 0x11;

	while (1)
	{
		if(~PIND & SW_START)
 116:	48 99       	sbic	0x09, 0	; 9
 118:	02 c0       	rjmp	.+4      	; 0x11e <main+0x1c>
			PORTC = ~(LED_BAT|LED_TxD|LED_RxD|LED_AUX|LED_MANAGE|LED_PROGRAM|LED_PLAY);
 11a:	98 b9       	out	0x08, r25	; 8
 11c:	fc cf       	rjmp	.-8      	; 0x116 <main+0x14>
		else PORTC = LED_BAT|LED_TxD|LED_RxD|LED_AUX|LED_MANAGE|LED_PROGRAM|LED_PLAY;
 11e:	88 b9       	out	0x08, r24	; 8
 120:	fa cf       	rjmp	.-12     	; 0x116 <main+0x14>

00000122 <_exit>:
 122:	f8 94       	cli

00000124 <__stop_program>:
 124:	ff cf       	rjmp	.-2      	; 0x124 <__stop_program>
